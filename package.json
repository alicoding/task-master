{
  "name": "task-master",
  "version": "1.0.0",
  "type": "module",
  "bin": {
    "tm": "./dist/cli/entry.js"
  },
  "directories": {
    "test": "test"
  },
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsx scripts/build.ts",
    "build:standard": "tsc --project tsconfig.build.json",
    "build:strict": "tsc",
    "build:force": "tsc --project tsconfig.build.json --skipLibCheck --skipDefaultLibCheck --noEmitOnError",
    "build:types": "tsc --project tsconfig.types.json",
    "build:fast": "tsx scripts/transpile-only.ts",
    "build:ts-only": "tsx scripts/build-ts-only.ts",
    "build:ts-only:force": "tsx scripts/build-ts-only.ts --force",
    "build:ts-only:skip-lib": "tsx scripts/build-ts-only.ts --skip-lib-check",
    "prepare": "npm run build:force",
    "dev": "tsx src/cli/entry.ts",
    "link-global": "npm run build:force && npm link",
    "typecheck": "tsc --project tsconfig.dev.json",
    "typecheck:watch": "tsc --project tsconfig.dev.json --watch",
    "validate:imports": "tsx scripts/validate-extensionless-imports.ts",
    "validate:imports:safe": "tsx scripts/validate-extensionless-imports-with-exceptions.ts",
    "fix:ts:comprehensive": "tsx scripts/ts-transformers/comprehensive-task-fix.ts",
    "typecheck:full": "npm run typecheck && npm run validate:imports:safe",
    "fix:ts:transform": "tsx scripts/ts-transformers/combined-transformers.ts",
    "fix:ts:transform:chalk": "tsx scripts/ts-transformers/fix-chalk-colors.ts",
    "fix:ts:transform:metadata": "tsx scripts/ts-transformers/fix-metadata-access.ts",
    "fix:ts:transform:tags": "tsx scripts/ts-transformers/fix-tags-nullability.ts",
    "fix:ts:transform:status": "tsx scripts/ts-transformers/simple-task-status-fix.ts",
    "fix:ts:transform:chalk-imports": "tsx scripts/ts-transformers/fix-chalk-imports.ts",
    "fix:ts:transform:combined": "tsx scripts/ts-transformers/combined-transformers.ts",
    "convert:js-to-ts": "tsx scripts/js-to-ts-converter.ts",
    "convert:js-to-ts:dry": "tsx scripts/js-to-ts-converter.ts --dry-run",
    "convert:js-to-ts:verbose": "tsx scripts/js-to-ts-converter.ts --verbose",
    "convert:js-to-ts:clean": "tsx scripts/js-to-ts-converter.ts --clean",
    "convert:js-to-ts:enhanced": "tsx scripts/enhanced-js-to-ts-converter.ts",
    "convert:js-to-ts:enhanced:dry": "tsx scripts/enhanced-js-to-ts-converter.ts --dry-run",
    "convert:js-to-ts:enhanced:verbose": "tsx scripts/enhanced-js-to-ts-converter.ts --verbose",
    "convert:js-to-ts:enhanced:clean": "tsx scripts/enhanced-js-to-ts-converter.ts --clean",
    "remove:js-files": "tsx scripts/remove-js-files.ts",
    "remove:js-files:dry": "tsx scripts/remove-js-files.ts --dry-run",
    "remove:js-files:verbose": "tsx scripts/remove-js-files.ts --verbose",
    "remove:js-files:force": "tsx scripts/remove-js-files.ts --force",
    "remove:js-files:dry-force": "tsx scripts/remove-js-files.ts --dry-run --force",
    "remove:js-map-only": "tsx scripts/remove-js-files.ts --js-map-only",
    "remove:dts-files": "tsx scripts/remove-redundant-dts-files.ts",
    "remove:dts-files:dry": "tsx scripts/remove-redundant-dts-files.ts --dry-run",
    "fix:ts": "tsx scripts/ts-fixers/run-all.ts",
    "fix:imports": "tsx scripts/remove-import-extensions.ts",
    "fix:imports:safe": "tsx scripts/remove-import-extensions-with-exceptions.ts",
    "fix:ts:dry": "tsx scripts/ts-fixers/run-all.ts --dry-run",
    "fix:ts:chalk": "tsx scripts/ts-fixers/fixChalkColorTypes.ts",
    "fix:ts:chalk:new": "tsx scripts/ts-fixers/fixChalkTypes.ts",
    "fix:ts:exports": "tsx scripts/ts-fixers/fixMissingExports.ts",
    "fix:ts:timewindow": "tsx scripts/ts-fixers/fixTimeWindowTypes.ts",
    "fix:ts:drizzle": "tsx scripts/ts-fixers/fixDrizzleTypes.ts",
    "fix:ts:interfaces": "tsx scripts/ts-fixers/fixInterfaceImplementations.ts",
    "fix:ts:strings": "tsx scripts/ts-fixers/fixStringLiteralTypes.ts",
    "fix:ts:modules": "tsx scripts/ts-fixers/fixModuleImports.ts",
    "lint:ts": "eslint . --ext .ts",
    "lint:ts:fix": "eslint . --ext .ts --fix",
    "analyze:ts:errors": "tsx scripts/ts-fixers/categorize-errors.ts",
    "test": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs run --config vitest.unified.config.ts",
    "test:watch": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs --config vitest.unified.config.ts",
    "test:coverage": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs run --coverage --config vitest.unified.config.ts",
    "test:single": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs run --config vitest.unified.config.ts",
    "test:legacy": "./tsfixresolution.js test",
    "test:legacy:single": "./tsfixresolution.js",
    "test:migrate": "tsx scripts/convert-to-vitest.js",
    "test:migrate:file": "tsx scripts/convert-to-vitest.js",
    "test:migrate:all": "tsx scripts/migrate-all-tests.js",
    "test:migrate:all:dry": "tsx scripts/migrate-all-tests.js --dry-run",
    "test:migrate:all:skip-tests": "tsx scripts/migrate-all-tests.js --skip-tests",
    "test:migrate:all:verbose": "tsx scripts/migrate-all-tests.js --verbose",
    "test:analyze": "tsx scripts/analyze-test-coverage.js",
    "test:migrate:interactive": "tsx scripts/select-test-to-migrate.js",
    "db:generate": "drizzle-kit generate:sqlite",
    "db:migrate": "tsx src/db/migrate.ts",
    "db:init": "tsx src/db/init.ts",
    "docs:generate": "tsx scripts/generate-docs.js",
    "docs:commands": "tsx scripts/generate-command-docs.js",
    "docs:all": "npm run docs:generate && npm run docs:commands",
    "db:fix": "tsx scripts/fix-database.js",
    "lint": "eslint . --ext .ts",
    "check": "tsc --noEmit",
    "fix:300-line": "tsx scripts/fix-long-files.js",
    "test:simple": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs run --config vitest.simple.config.ts",
    "test:simple:watch": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs --config vitest.simple.config.ts",
    "test:compat": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs run --config vitest.uvu-compat.config.ts",
    "test:compat:ui": "tsx --tsconfig ./tsconfig.json ./node_modules/vitest/vitest.mjs --ui --config vitest.uvu-compat.config.ts"
  },
  "keywords": [
    "task-management",
    "cli",
    "productivity",
    "sqlite",
    "drizzle",
    "nlp",
    "ai"
  ],
  "author": "",
  "license": "ISC",
  "description": "Structured CLI Task Engine with SQLite + Drizzle, NLP, and AI integration",
  "dependencies": {
    "@clack/prompts": "^0.10.1",
    "@inkjs/ui": "^2.0.0",
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^22.15.17",
    "@types/react": "^19.1.3",
    "@types/react-dom": "^19.1.4",
    "ansi-escapes": "^7.0.0",
    "axios": "^1.9.0",
    "better-sqlite3": "^11.10.0",
    "boxen": "^8.0.1",
    "chalk": "^5.4.1",
    "cli-cursor": "^5.0.0",
    "cli-table3": "^0.6.5",
    "commander": "^13.1.0",
    "dotenv": "^16.5.0",
    "drizzle-orm": "^0.43.1",
    "fuse.js": "^7.1.0",
    "fzf": "^0.5.2",
    "gradient-string": "^3.0.0",
    "ink": "^5.2.1",
    "ink-select-input": "^6.2.0",
    "ink-spinner": "^5.0.0",
    "ink-tab": "^5.1.0",
    "ink-text-input": "^6.0.0",
    "inquirer": "^12.6.1",
    "node-nlp-typescript": "^1.0.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "string-width": "^7.2.0",
    "ts-node": "^10.9.2",
    "uuid": "^11.1.0",
    "wcwidth": "^1.0.1",
    "wrap-ansi": "^9.0.0",
    "zustand": "^3.7.2"
  },
  "devDependencies": {
    "@types/inquirer": "^9.0.8",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "@vitest/coverage-v8": "^3.1.3",
    "chai": "^5.2.0",
    "drizzle-kit": "^0.31.1",
    "eslint": "^9.26.0",
    "execa": "^9.5.3",
    "glob": "^11.0.2",
    "sinon": "^20.0.0",
    "ts-morph": "^25.0.1",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3",
    "uvu": "^0.5.6",
    "vitest": "^3.1.3"
  },
  "engines": {
    "node": ">=16.0.0"
  }
}
